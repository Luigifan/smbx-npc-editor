<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>---1.4.2.1---
-Fixed a bug where on Windows XP, the ini file would try to be read from the file your opening from's directory instead of the executables. (Thanks a bunch Wohlstand!)
-Added support for using Alt and letters to navigate the menus.

---1.4.2.0---
-Lots of minor tweaks and stuff to saving, loading, etc
-Fixed a bug where Windows 8 users had cutoff windows (ffs)
-Added a "clear" and "reflect sprite" button to the NPC Animation pane. Reflect sprite literally reflects, is just for previewing only
-Finally updated this changelog ffs
-Updated the About box too

---1.4.0.0---
-Fixed a bug where the application would ask you twice if you wanted to exit
-Fixed a bug where if you tried to open a file you already opened, you would get an AccessDenied error
-Fixed a bug where the "Changed SMBX Directory" would append "\graphics\npc" to the path (lolwut)
-Added a database (thanks to Wohl's configuration) of built in NPC's from SMBX
-Added warnings for when you try to animate and you don't have these values set (gfxheight, gfxwidth, frames)
-Tweaked the save as algorithm
-Implemented an algorithm that determines whether or not to use the default values or defined values for gfxheight, gfxwidth, or frames for the animator
-Implemented a status bar
-Changed the animator algorithm to use the "Graphics" Height/Width, which is the gfxheight and gfxwidth in game
-Changed the "SMBX Forums" link to the official program's forums

---1.3.1.0---
-You can now choose to enable or disable NPC Animation Pane if it's too wide for you
-Added support for Wohlstand's "NPC Name"
-Added Knux's forum and a license to the about box
-Cleans up after it exits
-Fixed a bug under Linux where apparently it can't load the config so it threw an eror whenever it tried to load something
-Added a check to see if you're running on Linux. If so, it'll warn you about NPC-Configs not working

---1.3.0.0---
-Updated the UI to reflect the Windows 7/8 Desktop guidelines (segoe ui 9pt, white background, etc)
-Added a config file that contains every single NPC in SMBX. Now, you can find out what NPC this replaces and in the future this will have more functionality
-Changed the way reading is handled. It looks alot nicer now

---1.2.0.0---
-Added support for animating an NPC (thanks a bunch GhostHawk!)
-Tries to automatically find the corresponding image in the same directory as .TXT
-Can edit how fast the NPC is animated with the "Frames Speed" checkbox
     -Uncheck the check box to not have it write
-Can manually load an NPC file if needed
-Also shows the name of the NPC's gif file if loaded
-Added tooltips to explain each of the values. Hover your mouse over the label or box/numeric box/etc to see

---1.1.0.0---
-Adds support for the "0" score
-Adds support for negative GFX Offset values
-Adds support for a two-decimal place speed value (1.25 instead of 1.2)
-Adds the changelog form
-Removed the dialog asking if you wanted to quit, it was annoying and didn't work right
-Added support for drag/drop the NPC Text files onto the form

---1.0.0.1---
-Fixed a bug where the "Don't Hurt" checkbox wouldn't become enabled

---1.0.0.0---
-Basic UI with 3 groupboxes and a bunch of controls for enabling/disable various NPC codes
-Supports opening, saving, save as, etc
-.NET 4.0</value>
  </data>
</root>